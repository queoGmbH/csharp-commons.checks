# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

schedules:
- cron: "0 0 * * 3"
  displayName: Wednesday midnight build
  branches:
    include:
    - main
  always: true

trigger:
- main
- develop
- feature/*
- bugfix/*

stages:
- stage: Build
  displayName: 'Build and test package'

  jobs:
  - job: buildAndTest_windows
    pool:
      vmImage: 'windows-latest'
    
    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install -g dotnet-format --ignore-failed-sources'
    
    - task: PowerShell@2
      inputs:
        filePath: 'build.ps1'
        args: '--target=BuildAndTest'
    - task: PublishCodeCoverageResults@1
      inputs:
        codeCoverageTool: Cobertura
        summaryFileLocation: $(System.DefaultWorkingDirectory)/tests/**/coverage.cobertura.xml

  - job: buildAndTest_linux
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    # .NET Core 6.0 installieren, da es noch nicht per default installiert ist
    - task: UseDotNet@2
      displayName: 'Use .NET Core sdk'
      inputs:
        packageType: sdk
        version: 6.0.x
        installationPath: $(Agent.ToolsDirectory)/dotnet
    
    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install -g dotnet-format --ignore-failed-sources'
    
    - task: ShellScript@2
      inputs:
        scriptPath: 'build.sh'
        args: '--target=BuildAndTest'

  - job: BuildNuGetPackageForDeploy
    dependsOn:
    - buildAndTest_windows
    - buildAndTest_linux
    pool:
      vmImage: 'windows-latest'

    steps:
    - task: DotNetCoreCLI@2
      inputs:
        command: 'custom'
        custom: 'tool'
        arguments: 'install -g dotnet-format --ignore-failed-sources'
    
    - task: PowerShell@2
      inputs:
        filePath: 'build.ps1'
        args: '--target=BuildPackage'
